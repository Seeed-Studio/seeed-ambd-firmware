/** @brief  GATT write type*/
enum RPC_T_GATT_WRITE_TYPE
{
    RPC_GATT_WRITE_TYPE_REQ = 0x01,           /**<  ATT "Write Request"  */
    RPC_GATT_WRITE_TYPE_CMD = 0x02,           /**<  ATT "Write Command"  */
    RPC_GATT_WRITE_TYPE_SIGNED_CMD = 0x04     /**<  ATT "Signed Write Command"  */
} ;

/** @brief  GATT PDU type*/
enum RPC_T_GATT_PDU_TYPE
{
    RPC_GATT_PDU_TYPE_ANY           = 0x00, /**<  Any PDU type. */
    RPC_GATT_PDU_TYPE_NOTIFICATION  = 0x01, /**<  Notification PDU type. */
    RPC_GATT_PDU_TYPE_INDICATION    = 0x02  /**<  Indication PDU type. */
};

@group("ble_api")
interface rpc_gatt_client{
    rpc_ble_client_init(uint8 num) -> bool
    rpc_ble_add_client(uint8 app_id, uint8 link_num) -> uint8
    rpc_client_init(uint8 client_num)->void
    rpc_client_all_primary_srv_discovery(uint8 conn_id, uint8 client_id) -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid_srv_discovery(uint8 conn_id, uint8 client_id, uint16 uuid16)  -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid128_srv_discovery(uint8 conn_id, uint8 client_id,in uint8[16] p_uuid128)  -> RPC_T_GAP_CAUSE
    rpc_client_relationship_discovery(uint8 conn_id, uint8 client_id,uint16 start_handle, uint16 end_handle)  -> RPC_T_GAP_CAUSE
    rpc_client_all_char_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle)  -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid_char_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle,uint16 end_handle, uint16 uuid16)  -> RPC_T_GAP_CAUSE
    rpc_client_by_uuid128_char_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle, uint8[16] p_uuid128)  -> RPC_T_GAP_CAUSE
    rpc_client_all_char_descriptor_discovery(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_read(uint8 conn_id, uint8 client_id, uint16 handle)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_read_using_uuid(uint8 conn_id, uint8 client_id, uint16 start_handle, uint16 end_handle, uint16 uuid16, uint8[16] p_uuid128)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_write(uint8 conn_id, uint8 client_id, RPC_T_GATT_WRITE_TYPE write_type, uint16 handle, in binary data)  -> RPC_T_GAP_CAUSE
    rpc_client_attr_ind_confirm(uint8 conn_id)  -> RPC_T_GAP_CAUSE
};

@group("ble_api")
interface rpc_gatt_server{
    rpc_ble_server_init(uint8 num) -> bool
    rpc_ble_create_service(uint8[16] uuid, uint8 uuid_length, bool is_primary) -> uint8
    rpc_ble_delete_service(uint8 app_id) -> bool
    rpc_ble_service_start(uint8 app_id) -> uint8
    rpc_ble_get_servie_handle(uint8 app_id) -> uint8
    rpc_ble_create_char(uint8 app_id, uint8[16] uuid, uint8 uuid_length, uint8 properties, uint32 permissions) -> uint16
    rpc_ble_create_desc(uint8 app_id, uint16 char_handle, uint8[16] uuid, uint8 uuid_length, uint8 flags, uint32 permissions, uint16 value_length, in binary p_value @retain @nullable) -> uint16
    rpc_server_send_data(uint8 conn_id, uint8 service_id, uint16 attrib_index, in binary data, RPC_T_GATT_PDU_TYPE pdu_type) -> bool
    rpc_ble_server_get_attr_value(uint8 app_id, uint16 attr_handle) -> @nullable binary;
    rpc_server_exec_write_confirm(uint8 conn_id, uint16 cause, uint16 handle) -> bool
    rpc_server_attr_write_confirm(uint8 conn_id, uint8 service_id, uint16 attrib_index, RPC_T_APP_RESULT cause) -> bool
    rpc_server_attr_read_confirm(uint8 conn_id, uint8 service_id, uint16 attrib_index, in binary data, RPC_T_APP_RESULT cause) -> bool
};
